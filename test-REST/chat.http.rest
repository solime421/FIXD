### GET All Chats - Retrieves all chats in which the authenticated user participates
# client
GET http://localhost:3000/api/chats
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6ImNsaWVudCIsImlhdCI6MTc0NDc0MTI3MCwiZXhwIjoxNzQ0ODI3NjcwfQ.AH9otGmBaz5hPUu2tlZ5ZJ7mAS_JieUdLgPxSm-bxMY
Content-Type: application/json


### POST Create Chat
# Attempts to create a new chat
# If a chat already exists return the existing chat
POST http://localhost:3000/api/chats
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6ImNsaWVudCIsImlhdCI6MTc0NDc0MTI3MCwiZXhwIjoxNzQ0ODI3NjcwfQ.AH9otGmBaz5hPUu2tlZ5ZJ7mAS_JieUdLgPxSm-bxMY
Content-Type: application/json

{
  "freelancer_id": 4
}


### GET Chat Messages
# Retrieves all messages for the chat with ID 10.
GET http://localhost:3000/api/chats/4/messages
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6ImNsaWVudCIsImlhdCI6MTc0NDc0MTI3MCwiZXhwIjoxNzQ0ODI3NjcwfQ.AH9otGmBaz5hPUu2tlZ5ZJ7mAS_JieUdLgPxSm-bxMY
Content-Type: application/json


### POST Send Message
# Sends a new message in the chat with ID 10.
# The message is also broadcast via Socket.IO to all users in the chat room.
POST http://localhost:3000/api/chats/4/messages
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6ImNsaWVudCIsImlhdCI6MTc0NDc0MTI3MCwiZXhwIjoxNzQ0ODI3NjcwfQ.AH9otGmBaz5hPUu2tlZ5ZJ7mAS_JieUdLgPxSm-bxMY
Content-Type: application/json

{
  "message": "I need my car fixed"
}

### Mark All Messages in Chat as Read
POST http://localhost:3000/api/chats/4/messages/read
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwicm9sZSI6ImZyZWVsYW5jZXIiLCJpYXQiOjE3NDQ3MzcwMjMsImV4cCI6MTc0NDgyMzQyM30.UTqz-4qTQ6fVSHipYSc7l_92JdwSXNwWRxTuGMl03yw
Content-Type: application/json